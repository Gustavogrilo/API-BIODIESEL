-- MySQL Script generated by MySQL Workbench
-- Thu Dec 10 15:05:32 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Table `biodiesel`.`perfil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(150) NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biodiesel`.`perfil_tema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil_tema` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil_tema` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(250) NOT NULL,
  `perfil_id` INT UNSIGNED NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_perfil_topico_1_idx` (`perfil_id` ASC) VISIBLE,
  CONSTRAINT `fk_perfil_topico_1`
    FOREIGN KEY (`perfil_id`)
    REFERENCES `biodiesel`.`perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biodiesel`.`perfil_subtema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil_subtema` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil_subtema` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(150) NOT NULL,
  `tipo` ENUM('QUANTITATIVO', 'QUALITATIVO') NOT NULL,
  `perfil_tema_id` INT UNSIGNED NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_perfil_subtema_perfil_tema1_idx` (`perfil_tema_id` ASC) VISIBLE,
  CONSTRAINT `fk_perfil_subtema_perfil_tema1`
    FOREIGN KEY (`perfil_tema_id`)
    REFERENCES `biodiesel`.`perfil_tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biodiesel`.`perfil_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil_item` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil_item` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `valor` VARCHAR(150) NOT NULL,
  `ordem` INT NULL,
  `perfil_subtema_id` INT UNSIGNED NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_perfil_opcao_perfil_subtema1_idx` (`perfil_subtema_id` ASC) VISIBLE,
  UNIQUE INDEX `unique_valor_perfil_subtema_id` USING BTREE (`valor`, `perfil_subtema_id`, `ordem`) VISIBLE,
  CONSTRAINT `fk_perfil_opcao_perfil_subtema1`
    FOREIGN KEY (`perfil_subtema_id`)
    REFERENCES `biodiesel`.`perfil_subtema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biodiesel`.`perfil_resposta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil_resposta` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil_resposta` (
  `id` INT UNSIGNED NOT NULL,
  `resultado_qualitativo` INT UNSIGNED NULL,
  `resultado_quantitativo` DECIMAL NULL,
  `perfil_subtema_id` INT UNSIGNED NOT NULL,
  `cliente_id` INT UNSIGNED NOT NULL,
  `safra_id` INT UNSIGNED NOT NULL,
  `consultor_id` INT UNSIGNED NOT NULL,
  `propriedade_id` INT UNSIGNED NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_perfil_resposta_1_idx` (`resultado_qualitativo` ASC) VISIBLE,
  INDEX `fk_perfil_resposta_perfil_subtema1_idx` (`perfil_subtema_id` ASC) VISIBLE,
  UNIQUE INDEX `unique_safra_propriedade_subtema` (`safra_id` ASC, `propriedade_id` ASC, `perfil_subtema_id` ASC) VISIBLE,
  INDEX `fk_perfil_resposta_1_idx1` (`cliente_id` ASC) VISIBLE,
  INDEX `fk_perfil_resposta_propriedade1_idx` (`propriedade_id` ASC) VISIBLE,
  INDEX `fk_perfil_resposta_1_idx2` (`consultor_id` ASC) VISIBLE,
  CONSTRAINT `fk_perfil_resposta1`
    FOREIGN KEY (`resultado_qualitativo`)
    REFERENCES `biodiesel`.`perfil_item` (`perfil_subtema_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_perfil_resposta_perfil_subtema1`
    FOREIGN KEY (`perfil_subtema_id`)
    REFERENCES `biodiesel`.`perfil_subtema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_perfil_resposta_cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `biodiesel`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_perfil_resposta_safra1`
    FOREIGN KEY (`safra_id`)
    REFERENCES `biodiesel`.`safra` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_perfil_resposta_propriedade1`
    FOREIGN KEY (`propriedade_id`)
    REFERENCES `biodiesel`.`propriedade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_perfil_resposta_consultor1`
    FOREIGN KEY (`consultor_id`)
    REFERENCES `biodiesel`.`pessoa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biodiesel`.`perfil_subtema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biodiesel`.`perfil_subtema` ;

CREATE TABLE IF NOT EXISTS `biodiesel`.`perfil_subtema` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(150) NOT NULL,
  `tipo` ENUM('QUANTITATIVO', 'QUALITATIVO') NOT NULL,
  `perfil_tema_id` INT UNSIGNED NOT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1,
  `criado_em` TIMESTAMP NOT NULL DEFAULT NOW(),
  `atualizado_em` TIMESTAMP NOT NULL DEFAULT NOW() ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_perfil_subtema_perfil_tema1_idx` (`perfil_tema_id` ASC) VISIBLE,
  CONSTRAINT `fk_perfil_subtema_perfil_tema1`
    FOREIGN KEY (`perfil_tema_id`)
    REFERENCES `biodiesel`.`perfil_tema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `biodiesel`;

DELIMITER $$

USE `biodiesel`$$
DROP TRIGGER IF EXISTS `biodiesel`.`perfil_resposta_BEFORE_INSERT` $$
USE `biodiesel`$$
CREATE DEFINER = CURRENT_USER TRIGGER `biodiesel`.`perfil_resposta_BEFORE_INSERT` BEFORE INSERT ON `perfil_resposta` FOR EACH ROW
BEGIN
	DECLARE tipo TEXT;
    SET tipo = (SELECT tipo FROM perfil_subtema WHERE id = new.perfil.subtema_id);

	IF new.resultado_qualitativo IS NOT NULL AND new.resultado_quantitativo IS NOT NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Somente um resultado por resposta';
	END IF;
	IF tipo = 'QUANTITATIVO' AND new.resultado_quantitativo IS NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Obrigat贸rio resultado quantitativo para este tipo';
	END IF;

	IF tipo = 'QUALITATIVO' AND new.resultado_qualitativo IS NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Obrigat贸rio resultado qualitativo para este tipo';
	END IF;

END$$


USE `biodiesel`$$
DROP TRIGGER IF EXISTS `biodiesel`.`perfil_resposta_AFTER_UPDATE` $$
USE `biodiesel`$$
CREATE DEFINER = CURRENT_USER TRIGGER `biodiesel`.`perfil_resposta_AFTER_UPDATE` AFTER UPDATE ON `perfil_resposta` FOR EACH ROW
BEGIN
	DECLARE tipo TEXT;
    SET tipo = (SELECT tipo FROM perfil_subtema WHERE id = new.perfil.subtema_id);

	IF new.resultado_qualitativo IS NOT NULL AND new.resultado_quantitativo IS NOT NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Somente um resultado por resposta';
	END IF;
	IF tipo = 'QUANTITATIVO' AND new.resultado_quantitativo IS NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Obrigat贸rio resultado quantitativo para este tipo';
	END IF;

	IF tipo = 'QUALITATIVO' AND new.resultado_qualitativo IS NULL THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT =
			'Obrigat贸rio resultado qualitativo para este tipo';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
